# Based on:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-the-python-starter-workflow
name: Release Python Package

on:
  push:
    branches:
      - master

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest twine
      - name: Install package
        run: pip install .
      # - name: Test with pytest
      #   run: |
      #     pytest

  release:

    needs: test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build source distribution and wheel files
        run: python -m build
      - name: Extract version
        run: echo "PMC_VERSION=$(grep "^VERSION.*" setup.py | cut -d " " -f 3 | tr -d "'" | tr -d '"')" >> $GITHUB_ENV
      - name: Extract release notes
        run: ./extract_release_notes.py ${{ env.PMC_VERSION }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ env.PMC_VERSION }}
          body_path: ./release_notes.txt
      - name: Upload files to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
        run: python -m twine upload --repository testpypi dist/*
